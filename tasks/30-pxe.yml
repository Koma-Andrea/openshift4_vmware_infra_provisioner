---
- name: Install Needed Packages
  become: yes
  delegate_to: localhost
  yum:
    state: present
    name:
      - tcpdump
      - git
      - xz-devel
      - wget
      - genisoimage 
      - mkisofs
      - syslinux
      - "@Development tools"
      - coreutils
      - grub2-tools
      - grub2-pc-modules

- name: "Check if {{playbook_dir}}/tmp/iso/coreos_ipxe.iso exist"
  delegate_to: localhost
  stat: 
    path: "{{playbook_dir}}/tmp/iso/coreos_ipxe.iso"
  register: ipxe_iso

- name: Create coreos_ipxe.iso
  delegate_to: localhost
  when: 
   - not ipxe_iso.stat.exists
  block: 
    - name: Create tempdir
      delegate_to: localhost
      file:
        path: "{{playbook_dir}}/tmp/src/ipxe"
        state: directory
        recurse: yes

    - name: Fetch ipxe source code
      delegate_to: localhost
      git:
        repo: https://github.com/ipxe/ipxe/
        dest: "{{playbook_dir}}/tmp/src/ipxe"
        force: yes



    - name: Ensure VMWARE_SETTINGS are enabled
      loop:
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/settings.h"
          regexp: '^#define	VMWARE_SETTINGS'
          line: '#define	VMWARE_SETTINGS'
          insertbefore: '^#endif'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	DOWNLOAD_PROTO_HTTPS'
          line: '#define	DOWNLOAD_PROTO_HTTPS'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	DOWNLOAD_PROTO_FTP'
          line: '#define	DOWNLOAD_PROTO_FTP'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	DOWNLOAD_PROTO_NFS'
          line: '#define	DOWNLOAD_PROTO_NFS'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	NSLOOKUP_CMD'
          line: '#define	NSLOOKUP_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	TIME_CMD'
          line: '#define	TIME_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	DIGEST_CMD'
          line: '#define	DIGEST_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	LOTEST_CMD'
          line: '#define	LOTEST_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	VLAN_CMD'
          line: '#define	VLAN_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	PXE_CMD'
          line: '#define	PXE_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	REBOOT_CMD'
          line: '#define	REBOOT_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	POWEROFF_CMD'
          line: '#define	POWEROFF_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	IMAGE_TRUST_CMD'
          line: '#define	IMAGE_TRUST_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	PCI_CMD'
          line: '#define	PCI_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	PARAM_CMD'
          line: '#define	PARAM_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	NEIGHBOUR_CMD'
          line: '#define	NEIGHBOUR_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	PING_CMD'
          line: '#define	PING_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	CONSOLE_CMD'
          line: '#define	CONSOLE_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
        - path: "{{playbook_dir}}/tmp/src/ipxe/src/config/general.h"
          regexp: '^#define	IPSTAT_CMD'
          line: '#define	IPSTAT_CMD'
          insertbefore: '^#include\ \<config/named\.h\>'
      delegate_to: localhost
      lineinfile:
        path: "{{item.path}}"
        regexp: "{{item.regexp}}"
        line: "{{item.line}}"
        insertbefore: "{{item.insertbefore}}"

    - name: Create ipxe config path
      delegate_to: localhost
      file:
        path: "{{playbook_dir}}/tmp/iso"
        state: directory

    - name: Generate ipxe script from template
      delegate_to: localhost
      template:
        src: "{{ipxe_template}}"
        dest: "{{playbook_dir}}/tmp/iso/vmware.ipxe"

    - name: Cleanup ipxe
      delegate_to: localhost
      make:
        chdir: "{{playbook_dir}}/tmp/src/ipxe/src/"
        target: clean

    - name: Build '{{playbook_dir}}/tmp/iso/coreos_ipxe.iso' target with extra arguments
      delegate_to: localhost
      make:
        chdir: "{{playbook_dir}}/tmp/src/ipxe/src/"
        target: bin/ipxe.iso
        params:
          NUM_THREADS: "{{ansible_processor_count}}"
          EMBED: "{{playbook_dir}}/tmp/iso/vmware.ipxe"

    - name: "Copy produced ipxe iso in {{playbook_dir}}/tmp/iso/coreos_ipxe.iso"
      delegate_to: localhost
      copy:
        src: "{{playbook_dir}}/tmp/src/ipxe/src/bin/ipxe.iso"
        dest: "{{playbook_dir}}/tmp/iso/coreos_ipxe.iso"

